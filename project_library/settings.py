"""
Django settings for project_library project.

Generated by 'django-admin startproject' using Django 5.1.2.
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-uv!3!@8acdx&cut*aa&0ym#=uu_*rduu=k1b8b0kke3(6r_h)('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app_library',  # Custom app for the library
]

MIDDLEWARE = [
    # Other middlewares...
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'app_library.session_timeout.SessionTimeoutMiddleware',  # Your custom timeout middleware
]

ROOT_URLCONF = 'project_library.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Custom template directory
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project_library.wsgi.application'


# Database Configuration (MySQL with XAMPP)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'lms',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}


# Password Validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Localization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# Static Files (CSS, JS, Images)
STATIC_URL = '/static/'

# Collect all static files in one place for production
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# During development, look for static files here
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'app_library/static'),
]


# Media Files (User Uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default Primary Key Type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom User Model
AUTH_USER_MODEL = 'app_library.User'


# Custom Authentication Backends
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Default backend
    'app_library.backends.StudentAuthenticationBackend',
    'app_library.backends.StaffAuthenticationBackend',
]


# Static File Serving in Development
if DEBUG:
    from django.conf.urls.static import static
    urlpatterns = static(STATIC_URL, document_root=os.path.join(BASE_DIR, 'app_library/static'))
    urlpatterns += static(MEDIA_URL, document_root=MEDIA_ROOT)


# Session will expire after 30 minutes (30 minutes * 60 seconds)
SESSION_COOKIE_AGE = 1 * 60  

# Optional: Ensure the session expires when the browser closes
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

CSRF_COOKIE_SECURE = False  # Set to True in production
CSRF_COOKIE_HTTPONLY = True
CSRF_TRUSTED_ORIGINS = ['http://localhost', 'http://127.0.0.1']  # Add your development domain


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # For development
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587    
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'cv6913182@gmail.com' # Replace with your email
EMAIL_HOST_PASSWORD = 'pfvf psdj epfo xyvu' # Replace with your email password
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER  # Email that will send the emails